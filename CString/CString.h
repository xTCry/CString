#pragma once

#include <iostream>
#include <fstream>

/**
* Разработать класс, объекты которого хранят с-строку.
* Класс должен содержать указатель на хранимую строку.
* • Конструктор по умолчанию, обнуляющий указатель храниамой строки;
* • Конструктор с создаваемой с-строкой.
* 
* Методы, осуществляющие следующие операции:
* • ввод хранимой строки из внешнего массива, файла или объекта того же класса;
* • получение копии хранимой строки;
* • запись хранимой строки в файл.
* 
* Разработать консольный интерфейс тестирования всех методов объектов этого класса.
* Класс должен быть выполнен в дополнительных модулях: заголовочном и исходнике, чтобы можно было легко переносить его в другой проект.
* В главном модуле в функции main должен быть описан интерфейс тестирования.
* Следует заботиться о недопустимости утечки апмяти.
*/

class CString {
    char* pStr;

    friend std::ostream& operator<< (std::ostream& os, const CString& obj);
    friend std::istream& operator>> (std::istream& is, CString& obj);
    friend CString operator+ (const CString& lhs, const CString& rhs);

public:
    /**
    * Конструктор по умолчанию, обнуляющий указатель храниамой строки
    */
    CString();

    /**
    * Конструктор с создаваемой с-строкой
    */
    CString(char* data);

    int getLength();

    /**
    * Move constructor (перенос данных временного объекта в новый объект)
    */
    CString(CString&& source);

    /**
    * Ввод хранимой строки из того же класса (копирование)
    */
    CString(const CString& source);

    /**
    * Перегрузка оператора присваивания (из такого же класса)
    */
    CString& operator= (const CString& rhs);

    /**
    * Перегрузка оператора присваивания (ввод хранимой строки из внешнего массива)
    */
    CString& operator= (const char*& rhs);

    /**
    * [FromFile] Ввод хранимой строки из файла
    */
    CString& ReadFromFile(std::string path);

    /**
    * Запись хранимой строки в файл
    */
    CString& WriteToFile(std::string path);

    /**
    * Получение копии хранимой строки
    */
    char* GetCopy();

    ~CString() {
        delete pStr;
    }
};
